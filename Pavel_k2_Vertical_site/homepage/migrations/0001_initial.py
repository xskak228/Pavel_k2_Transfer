# Generated by Django 5.1.7 on 2025-07-02 12:03

import ckeditor.fields
import django.core.validators
import homepage.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('CompanyPolicy', ckeditor.fields.RichTextField(blank=True, verbose_name='Политика Компании')),
                ('PrivacyPolicy', ckeditor.fields.RichTextField(blank=True, verbose_name='Политика Конфиденциальности')),
                ('HelpTextToSupport', ckeditor.fields.RichTextField(blank=True, verbose_name='Вспомагательынй текст для ТП')),
            ],
            options={
                'verbose_name': 'Контент сайта',
                'verbose_name_plural': 'Контент сайта',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_number', models.CharField(default=homepage.models.generate_unique_number, editable=False, max_length=10, unique=True, verbose_name='Индивидуальный номер')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Время создания заявки', verbose_name='Заявка создана')),
                ('from_location', models.CharField(max_length=100, verbose_name='Откуда')),
                ('to_location', models.CharField(max_length=100, verbose_name='Куда')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('date', models.DateField(help_text='Время когда начинается поездка', verbose_name='Дата поездки')),
                ('time', models.TimeField(help_text='Дата когда начинается поездка', verbose_name='Время поездки')),
                ('tariff', models.CharField(max_length=255, verbose_name='Тариф')),
                ('num_people', models.PositiveIntegerField(verbose_name='Количество человек')),
                ('luggage', models.PositiveIntegerField(verbose_name='Количество багажа')),
                ('child_seat', models.BooleanField(default=False, verbose_name='Детское кресло')),
                ('pet', models.BooleanField(default=False, verbose_name='Животное')),
                ('price', models.PositiveIntegerField(help_text='Предварительаня цена, НЕ ИЗМЕНЯТЬ!', verbose_name='Цена')),
                ('sale_price', models.PositiveIntegerField(help_text='Предварительаня цена со Скидкой, НЕ ИЗМЕНЯТЬ!', verbose_name='Цена со скидкой')),
                ('comment', models.CharField(help_text='Комментарий от клиента', max_length=1000, verbose_name='Комментарий')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Время изменения статуса с ЖдемПодтверждения на ЗаявкаОтправленаБоту', verbose_name='Статус изменен')),
                ('status', models.CharField(help_text='Статус заявки', max_length=100, verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='MainInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Company_Phone_Number', models.CharField(help_text='В формате +7(123)456-78-90, Будет отображаться на сайте поэтому красиво', max_length=100, verbose_name='Номер телефона Компании')),
                ('Url_Telegram', models.CharField(help_text='В формате https://telegram.org', max_length=100, verbose_name='Ссылка на телеграмм канал/аккаунт')),
                ('Url_WhatsApp', models.CharField(help_text='В формате https://whatsapp.org', max_length=100, verbose_name='Ссылка на Ватцап канал/аккаунт')),
            ],
        ),
        migrations.CreateModel(
            name='MainSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ApiKey_OpenRouteService', models.CharField(help_text='Api ключ для работы сайта через сервси OpenRouteService для вычисления расстояния https://openrouteservice.org/', max_length=400, verbose_name='Api Ключ OpenRouteService')),
                ('ApiKey_TgBot', models.CharField(max_length=400, verbose_name='Api Ключ Телеграмм Бота')),
                ('ChatID_Telegram', models.CharField(max_length=50, verbose_name='ID Чата для работы телеграмм бота')),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_km', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за километр')),
                ('price_per_passenger', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за 1 пассажира')),
                ('price_per_baggage', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за 1 багаж')),
                ('price_for_pets', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за домашних животных')),
                ('price_for_child_seat', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за детское кресло')),
                ('tariff_price_econom', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за ЭКОНОМ тариф')),
                ('tariff_price_standart', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за СТАНДАРТ тариф')),
                ('tariff_price_comfort', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за КОМФОРТ тариф')),
                ('tariff_price_miniven', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за МИНИВЕН тариф')),
                ('tariff_price_biznes', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Цена за БИЗНЕС тариф')),
            ],
        ),
        migrations.CreateModel(
            name='SupportInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Phone_Number_Support', models.CharField(help_text='Телефон для связи с ТП (Техническая Поддержка), в формате +7(123)456-78-90', max_length=100, verbose_name='Телефон для связи с ТП')),
                ('Url_Telegram_Support', models.CharField(help_text='В формате https://telegram.org', max_length=300, verbose_name='Ссылка на телеграмм бота ТП')),
                ('Url_YandexForm_Support', models.CharField(help_text='В формате https://', max_length=300, verbose_name='Ссылка на Яндекс Форму ТП')),
            ],
        ),
    ]
